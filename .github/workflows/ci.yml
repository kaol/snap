# Modified from https://kodimensional.dev/github-actions

name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened]
    paths-ignore:
      - "**.md"
      - "*.sh"
      - "CODEOWNERS"
      - "CONTRIBUTORS"
      - "LICENSE"
      - "extra/**"
  push:
    branches:
      - 'master'
  schedule:
    # Additionally run once per week (At 00:00 on Sunday) to maintain cache.
    - cron: '0 0 * * 0'

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc:
          - "8.10"
          - "9.0"
          - "9.2"
          - "9.4"
          - "9.6"
          - "9.8"
          - "9.10"
        # TODO: HsOpenSSL fails to build on Windows and macOS without openssl.
        # include:
        #  - { os: macOS-latest,   ghc: "9.8" }
        #  - { os: windows-latest, ghc: "9.8" }

    steps:
      - uses: actions/checkout@v4

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: latest
          cabal-update: true

      - name: Configure
        run: |
          cabal configure --enable-tests --enable-benchmarks --enable-documentation
          cabal build --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies

      - name: Save cached dependencies
        uses: actions/cache/save@v4
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all

      - name: Documentation
        if: matrix.ghc >= '9.4'
        run: cabal haddock

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # GHC version must match https://www.stackage.org/nightly
          - stack: "latest"
            ghc: "9.8"
            resolver: "nightly-2024-05-21"
            # Note: this resolver is only a placeholder;
            # it is overwritten later by `stack config set resolver nightly`.

    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        name: Setup Haskell Stack
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          stack-version: ${{ matrix.stack }}
          cabal-update: false


      - name: Configure
        run: |
          cat <<EOF > stack.yaml
            packages:
              - '.'
            resolver: ${{ matrix.resolver }}
          EOF
          stack config set system-ghc true --global
          stack config set resolver nightly
        # The last step overwrites the resolver in stack.yaml.

      - uses: actions/cache@v4
        name: Cache
        with:
          path: ${{ steps.setup.outputs.stack-root }}
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-nightly

      - name: Install dependencies
        run: |
          stack build --test --bench --no-run-tests --no-run-benchmarks --only-dependencies

      - name: Build
        run: |
          stack build --test --bench --no-run-tests --no-run-benchmarks

      - name: Test
        run: |
          stack test
